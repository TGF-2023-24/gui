Model Pnpl

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package PNPL <http://www.petrinets.org/>

  Class pnpl
    Reference pn_150 : PetriNet<<1..1>>
    Reference featuremodel : FeatureModel<<1..1>>
    Reference presencecondition : PresenceCondition<<1..*>>

  Class PetriNet
    Reference elements : Element<<1..*>>

  Class Element
    Reference presenceCondition : PresenceCondition<<1..1>>
    Attribute name : EString<<1..1>>

  Class Place -> Element
    Attribute tokens : EInt<<1..1>>

  Class Transition -> Element

  Class Arc -> Element
    Attribute weight : EInt<<1..1>>

  Class ArcTP -> Arc
    Reference source : Transition<<1..1>>
    Reference target : Place<<1..1>>

  Class ArcPT -> Arc
    Reference source : Place<<1..1>>
    Reference target : Transition<<1..1>>

  Class FeatureModel
    Reference nodes : Node<<1..*>>
    Reference relations : Relation<<0..*>>

  Class Node
    Attribute name : EString<<1..1>>
    Attribute abstract : EBoolean<<1..1>>
    Attribute mandatory : EBoolean
    Reference exclude : Node<<0..*>>
    Reference requires : Node<<0..*>>
    Attribute select : EBoolean

  Class Relation
    Reference Parent : Node<<1..1>>
    Reference Childs : Node<<1..*>>
    Attribute type : RelationType<<1..1>>

  Class PresenceCondition
    Attribute id : EString<<1..1>>
    Reference expression : Expression<<1..1>>

  Class Expression

  Class Feature -> Expression
    Reference feature : Node

  Class UnaryExpression -> Expression
    Reference right : Expression<<1..1>>
    Attribute operator : UnaryOperator<<1..1>>

  Class BinaryExpression -> Expression
    Reference left : Expression<<1..1>>
    Attribute operator : BinaryOperator<<1..1>>
    Reference right : Expression<<1..1>>

  Enum RelationType
    Literal AND = 0
    Literal OR = 1
    Literal ALTERNATIVE = 3

  Enum UnaryOperator
    Literal NOT = 0

  Enum BinaryOperator
    Literal AND = 0
    Literal OR = 1
    Literal XOR = 2
    Literal IFF = 3
    Literal IMPLIES = 4
